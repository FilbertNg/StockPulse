name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Build Docker Images
      run: docker-compose build

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 600
    
    - name: Remove all old images
      run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

    - name: Push image to DigitalOcean Container Registry
      run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

    - name: Deploy to DigitalOcean Droplet
      env:
        SSH_HOST: ${{ secrets.DIGITALOCEAN_HOST }}
        SSH_USERNAME: ${{ secrets.DIGITALOCEAN_USERNAME }}
        SSH_PRIVATE_KEY: ${{ secrets.DIGITALOCEAN_PRIVATE_KEY }}
      run: |
        echo "$SSH_PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem
        scp -i private_key.pem docker-compose.yaml $SSH_USERNAME@$SSH_HOST:~/sentiment-analysis/
        rsync -avz -e "ssh -i private_key.pem" . $SSH_USERNAME@$SSH_HOST:~/sentiment-analysis/
        ssh -i private_key.pem $SSH_USERNAME@$SSH_HOST "
          cd ~/sentiment-analysis &&
          docker-compose down &&
          docker-compose up -d
        "
